# -*- coding: utf-8 -*-
"""writesheet.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PrYBwNHCSWRFcB5PP9kXwXMn9gcTUKb1
"""

## import libs 
import pandas as pd 
from datetime import date, datetime 


## ler arquivo
df= pd.read_excel('/content/df.xlsx')  # 'df.xlsx deve ser trocado pelo nome do arquivo'

## Padronizar nome das colunas 

df.columns=[s.lower().replace(" ", '_') for s in list(df.columns)]

## selecionar colunas de interesse:  data_inicio,malha, etapa, cod ,hora_inicio, hora_fim

df= df[['data_inicio','malha','etapa','cod','hora_inicio','hora_fim']]

## remover linhas com malha NA
df.dropna(subset=['malha'],inplace=True)

## converter data_incio para string 
#3 date to string
df['data_inicio'] = df['data_inicio'].dt.strftime('%d/%m/%Y').astype(str)


def relatorio_malha_especifica(arquivo, data_dia):
  """ 
  Essa função cria o relatorio por data e malha e salva o arquivo relatorio_malha_data_dia.xlxs

  argumentos:
  arquivo: arquivo do dia 
  data_dia: data do dia string (exemplo '06/12/2020')

  """
  ## ver valores da malha 
  valores_malha= sorted(df['malha'].unique())
  

  #filtrar por data 
  df_teste= df[(df['data_inicio']==data_dia) & (df['malha']==valores_malha[0])]

  ##selecionar apenas etapa, cod, hora_inicio, hora_fim
  df_teste_2= df_teste[['etapa','cod','hora_inicio','hora_fim']]

  ## ver valores dos cod
  valores_cod = [str(x) for x in sorted(df_teste_2.cod.unique())]

  ## hora inicio e hora fim 
  hora_inicio_teste=df_teste_2.pivot(index='etapa',columns='cod',values=['hora_inicio'])
  hora_inicio_teste.columns=valores_cod
  hora_fim_teste=df_teste_2.pivot(index='etapa',columns='cod',values=['hora_fim'])
  hora_fim_teste.columns=valores_cod

  ## criando o primeiro relatorio 
  saida_test=pd.concat([hora_inicio_teste,hora_fim_teste])
  saida_test.sort_index(inplace=True)

  ##pegar nome de index e quantas vezes cada um aparece
  nome_index=saida_test.index.unique().to_list()
  contagem_nome_index=saida_test.index.value_counts().to_list()

  ## renomear index
  nome_index_novo=[]
  for y, content in enumerate(contagem_nome_index):
    for x in range(content):
      nome_index_novo.append(nome_index[y] +'_'+ str(x))

  saida_test.index=nome_index_novo    

  ## resetar o index para gente poder reordenar
  ordem = [x for x in nome_index_novo if x.startswith('ING')]
  ordem.extend([x for x in nome_index_novo if x.startswith('DIF')])
  ordem.extend([x for x in nome_index_novo if x.startswith('ENR')])
  ordem.extend([x for x in nome_index_novo if x.startswith('DUM')])
  saida_test = saida_test.reindex(index=ordem)

  ##escrever 1o sheet 
  with pd.ExcelWriter('relatorio_malha_'+ data_dia.replace('/','_') +'.xlsx') as writer:
    nome_sheet= 'malha_'+ str(valores_malha[0])
    saida_test.to_excel(writer, sheet_name=nome_sheet)



  ## refazer isso pro resto das malhas 
  for i in range(1,len(valores_malha)):
    #filtrar por data 
    df_teste= df[(df['data_inicio']==data_dia) & (df['malha']==valores_malha[i])]

    ##selecionar apenas etapa, cod, hora_inicio, hora_fim
    df_teste_2= df_teste[['etapa','cod','hora_inicio','hora_fim']]

    ## ver valores dos cod
    valores_cod = [str(x) for x in sorted(df_teste_2.cod.unique())]

    ## hora inicio e hora fim 
    hora_inicio_teste=df_teste_2.pivot(index='etapa',columns='cod',values=['hora_inicio'])
    hora_inicio_teste.columns=valores_cod
    hora_fim_teste=df_teste_2.pivot(index='etapa',columns='cod',values=['hora_fim'])
    hora_fim_teste.columns=valores_cod

    ## criando o primeiro relatorio 
    saida_test=pd.concat([hora_inicio_teste,hora_fim_teste])
    saida_test.sort_index(inplace=True)

    ##pegar nome de index e quantas vezes cada um aparece
    nome_index=saida_test.index.unique().to_list()
    contagem_nome_index=saida_test.index.value_counts().to_list()

    ## renomear index
    nome_index_novo=[]
    for y, content in enumerate(contagem_nome_index):
      for x in range(content):
        nome_index_novo.append(nome_index[y] +'_'+ str(x))

    saida_test.index=nome_index_novo    

    ## resetar o index para gente poder reordenar
    ordem = [x for x in nome_index_novo if x.startswith('ING')]
    ordem.extend([x for x in nome_index_novo if x.startswith('DIF')])
    ordem.extend([x for x in nome_index_novo if x.startswith('ENR')])
    ordem.extend([x for x in nome_index_novo if x.startswith('DUM')])
    saida_test = saida_test.reindex(index=ordem)

    ##escrever  sheet 
    with pd.ExcelWriter('relatorio_malha_'+ data_dia.replace('/','_') +'.xlsx',mode='a') as writer:
      nome_sheet= 'malha_'+ str(valores_malha[i])
      saida_test.to_excel(writer, sheet_name=nome_sheet)

## função para gerar relatório
relatorio_malha_especifica(df,'15/11/2020')